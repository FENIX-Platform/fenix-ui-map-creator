{"version":3,"sources":["webpack:///fenix-ui-map-creator.min.js","webpack:///webpack/bootstrap 625ee555ebfccd480952","webpack:///./src/js/index.js","webpack:///./src/config/config.js","webpack:///external \"jquery\"","webpack:///external \"loglevel\"","webpack:///./src/config/errors.js","webpack:///./src/config/events.js","webpack:///external \"underscore\"","webpack:///external \"fenix-ui-map\"","webpack:///external \"fenix-ui-pivotator\"","webpack:///external \"fenix-ui-pivotator-utils\"","webpack:///external \"amplify-pubsub\""],"names":["define","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_9__","__WEBPACK_EXTERNAL_MODULE_10__","__WEBPACK_EXTERNAL_MODULE_11__","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","log","ERR","EVT","C","FM","Pivotator","Fenixtool","amplify","MapCreator","o","info","extend","this","initial","_parseInput","fenix_ui_mapConfig","fenix_ui_map","valid","_validateInput","_initVariables","_bindEventListeners","_renderMap","error","prototype","on","channel","fn","context","_context","channels","push","callback","addBaseLayer","layer","fenixMap","addTileLayer","addLayer","model","L","TileLayer","map","errors","hasOwnProperty","metadata","createLayerFenixUid","createLayerFenixJoin","createLayerFenix","layertitle","legendtitle","removeLayer","status","ready","invalidateSize","$el","el","pc","aggregationFn","aggregations","hidden","columns","x","values","y","rows","series","formatter","valueOutputType","showRowHeaders","decimals","showCode","showFlag","showUnit","pivotatorConfig","window","fx_map_id","String","warn","length","code","MISSING_CONTAINER","pivotator","fenixTool","subscribe","_getEventName","WINDOW_RESIZE","self","Map","createMap","leafletMap","uid","setTimeout","bind","_trigger","args","Array","slice","arguments","i","l","subscription","apply","evt","concat","_unbindEventListeners","unsubscribe","dispose","destroyMap","empty","options","Error","layers","dsd","workspace","layerName","urlWMS","DEFAULT_WMS_SERVER","en","opacity","_validateJoinInput","getJoinLayer","join","style","defPopup","joincolumnlabel","joincolumn","lang","popupBuilder","customgfi","showpopup","content","EN","isFunction","codes","joindata","forEach","keys","key","isNumber","parseInt","zoomlayer","split","zoomTo","colorRamp","colorramp","geoColumn","valueColumn","muColumn","col","index","subject","geoSubject","valueSubject","muSubject","column","_validateJoinColumnInput","codelist","toLowerCase","layerMapping","idCodeList","referenceArea","getJoinData","measurementunit","console","data","geoColumnIndex","valueColumnIhdex","cachedValues","row","obj","value","dataType","Object","undefined","WMS_URL","url","wms","plugins","disclaimerfao","geosearch","mouseposition","controlloading","zoomcontrol","guiController","overlay","baselayer","wmsLoader","gui","leaflet","zoomControl","attributionControl","minZoom","gaul0","layertype","jointype","openlegend","defaultgfi","decimalvalues","escap_area","gaul1","uae_gaul","gaul_adm1","faostat_countrycodes","faostat_countries","gaul","uneca_partner","gaul1_afg","iso3","uneca_iso3"],"mappings":"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","file":"fenix-ui-map-creator.min.js","sourcesContent":["define([\"jquery\",\"loglevel\",\"underscore\",\"fenix-ui-map\",\"fenix-ui-pivotator\",\"fenix-ui-pivotator-utils\",\"amplify-pubsub\"], function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__) { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(3),\n\t    __webpack_require__(7),\n\t    __webpack_require__(4),\n\t    __webpack_require__(5),\n\t    __webpack_require__(6),\n\t    __webpack_require__(2),\n\t    __webpack_require__(8),\n\t    __webpack_require__(9),\n\t    __webpack_require__(10),\n\t    __webpack_require__(11)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, _, log, ERR, EVT, C, FM, Pivotator, Fenixtool, amplify) {\n\t\n\t    'use strict';\n\t\n\t    function MapCreator(o) {\n\t\n\t        log.info(\"FENIX MapCreator\");\n\t        log.info(o);\n\t\n\t        _.extend(this, C, {initial: o});\n\t\n\t        this._parseInput(o);\n\t\n\t        this.fenix_ui_mapConfig = o.fenix_ui_map;\n\t\n\t        var valid = this._validateInput();\n\t\n\t        if (valid === true) {\n\t\n\t            this._initVariables();\n\t\n\t            this._bindEventListeners();\n\t\n\t            this._renderMap();\n\t\n\t            return this;\n\t\n\t        } else {\n\t            log.error(\"Impossible to create MapCreator\");\n\t            log.error(valid)\n\t        }\n\t\n\t    }\n\t\n\t    // API\n\t\n\t    /**\n\t     * pub/sub\n\t     * @return {Object} component instance\n\t     */\n\t    MapCreator.prototype.on = function (channel, fn, context) {\n\t        var _context = context || this;\n\t        if (!this.channels[channel]) {\n\t            this.channels[channel] = [];\n\t        }\n\t        this.channels[channel].push({context: _context, callback: fn});\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Add a base layer to map\n\t     */\n\t    MapCreator.prototype.addBaseLayer = function (layer) {\n\t\n\t        this.fenixMap.addTileLayer(layer, true);\n\t\n\t        return this;\n\t    };\n\t    /**\n\t     * Add a layer to map\n\t     */\n\t    MapCreator.prototype.addLayer = function (model) {\n\t\n\t        var layer;\n\t\n\t        if (!model)\n\t            return false;\n\t\n\t        //support simple Leaflet layer\n\t        if (model instanceof L.TileLayer)\n\t            return this.fenixMap.map.addLayer(model);\n\t\n\t        // TODO: switch to check if it's a fenix layer\n\t        if (this.errors && (!model || !model.hasOwnProperty(\"metadata\") ))\n\t            this.errors.metadata = \"Model does not contain 'metadata' attribute.\";\n\t\n\t        if (typeof model === 'string')\n\t            layer = this.createLayerFenixUid(model);\n\t\n\t        else if (model.hasOwnProperty('data'))\n\t            layer = this.createLayerFenixJoin(model);\n\t\n\t        else\n\t            layer = this.createLayerFenix(model);\n\t\n\t        layer = new FM.layer(layer);\n\t\n\t        if (typeof model === 'object' && model['metadata'] && model['metadata']['title'] && model['metadata']['title']['EN'])\n\t            layer.layer.layertitle = model['metadata']['title']['EN'];\n\t\n\t        if (this.initial.legendtitle)\n\t            layer.layer.layertitle = this.initial.legendtitle;\n\t\n\t        this.fenixMap.addLayer(layer);\n\t\n\t        return layer;\n\t    };\n\t\n\t    /**\n\t     * Remove a layer from map\n\t     */\n\t    MapCreator.prototype.removeLayer = function (layer) {\n\t\n\t        if (this.status.ready !== true) {\n\t            return;\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Invalidate map size\n\t     */\n\t    MapCreator.prototype.invalidateSize = function () {\n\t\n\t        if (this.status.ready !== true) {\n\t            return;\n\t        }\n\t\n\t        this.fenixMap.invalidateSize()\n\t\n\t        return this;\n\t    };\n\t\n\t    // end API\n\t\n\t    MapCreator.prototype._parseInput = function () {\n\t\n\t        this.id = this.initial.id;\n\t        this.$el = $(this.initial.el);\n\t        this.model = this.initial.model;\n\t\n\t        //pivotator config\n\t        var pc = {};\n\t\n\t        pc.aggregationFn = this.initial.aggregationFn;\n\t\n\t        pc.aggregations = this.initial.aggregations || [];\n\t        pc.hidden = this.initial.hidden || [];\n\t        pc.columns = this.initial.x;\n\t        pc.values = this.initial.y || [\"value\"];\n\t        pc.rows = this.initial.series;\n\t\n\t        pc.formatter = this.initial.formatter || \"value\";\n\t        pc.valueOutputType = this.initial.valueOutputType;\n\t        pc.showRowHeaders = this.initial.showRowHeaders || false;\n\t        pc.decimals = this.initial.decimals || 2;\n\t\n\t        pc.showCode = this.initial.showCode || false;\n\t        pc.showFlag = this.initial.showFlag || false;\n\t        pc.showUnit = this.initial.showUnit || false;\n\t\n\t        // add more pivotator config\n\t\n\t        this.pivotatorConfig = pc;\n\t\n\t    };\n\t\n\t    MapCreator.prototype._validateInput = function () {\n\t\n\t        var valid = true,\n\t            errors = [];\n\t\n\t        //set MapCreator id\n\t        if (!this.id) {\n\t\n\t            window.fx_map_id >= 0 ? window.fx_map_id++ : window.fx_map_id = 0;\n\t            this.id = String(window.fx_map_id);\n\t            log.warn(\"Impossible to find MapCreator id. Set auto id to: \" + this.id);\n\t        }\n\t\n\t        //Check if $el exist\n\t        if (this.$el.length === 0) {\n\t            errors.push({code: ERR.MISSING_CONTAINER});\n\t            log.warn(\"Impossible to find box container\");\n\t        }\n\t\n\t        return errors.length > 0 ? errors : valid;\n\t\n\t    };\n\t\n\t    MapCreator.prototype._initVariables = function () {\n\t\n\t        //pub/sub\n\t        this.channels = {};\n\t\n\t        this.status = {};\n\t        this.status.ready = false;\n\t\n\t        this.pivotator = new Pivotator();\n\t        this.fenixTool = new Fenixtool();\n\t    };\n\t\n\t    MapCreator.prototype._bindEventListeners = function () {\n\t\n\t        amplify.subscribe(this._getEventName(EVT.WINDOW_RESIZE), this, this.invalidateSize);\n\t    };\n\t\n\t    MapCreator.prototype._renderMap = function () {\n\t\n\t        var self = this;\n\t\n\t        //var myPivotatorConfig=this.fenixTool.parseInut(this.initial.model.metadata.dsd, this.pivotatorConfig);\n\t        //var model = this.pivotator.pivot(this.model, this.pivotatorConfig);\n\t\n\t        self.fenixMap = new FM.Map(self.$el, self.fenix_ui_mapConfig);\n\t        self.fenixMap.createMap();\n\t\n\t        self.leafletMap = self.fenixMap.map;\n\t\n\t        if (self.model) {\n\t            self.addLayer(self.model);\n\t        }\n\t        else if (this.initial.uid) {\n\t            self.addLayer(this.initial.uid);\n\t        }\n\t\n\t\n\t        //TODO bind to Leaflet whenReady\n\t        self.status.ready = true;  //To be set on map ready event\n\t\n\t        setTimeout(_.bind(function () {\n\t            self._trigger('ready');\n\t        }, self), 0);\n\t    };\n\t\n\t    MapCreator.prototype._trigger = function (channel) {\n\t\n\t        if (!this.channels[channel]) {\n\t            return false;\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        for (var i = 0, l = this.channels[channel].length; i < l; i++) {\n\t            var subscription = this.channels[channel][i];\n\t            subscription.callback.apply(subscription.context, args);\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    MapCreator.prototype._getEventName = function (evt) {\n\t\n\t        return this.id.concat(evt);\n\t\n\t    };\n\t\n\t    MapCreator.prototype._unbindEventListeners = function () {\n\t\n\t        amplify.unsubscribe(this._getEventName(EVT.WINDOW_RESIZE), this.invalidateSize);\n\t    };\n\t\n\t    MapCreator.prototype.dispose = function () {\n\t\n\t        //unbind event listeners\n\t        this._unbindEventListeners();\n\t\n\t        if (this.status.ready === true) {\n\t            this.fenixMap.destroyMap();\n\t        }\n\t\n\t        this.$el.empty();\n\t\n\t    };\n\t\n\t    MapCreator.prototype.createLayerFenix = function (model, options) {\n\t        var metadata = model.metadata;\n\t        var layer = {};\n\t        // Define the layer\n\t        if (metadata.hasOwnProperty(\"dsd\")) {\n\t            layer.layers = \"\";\n\t            if (metadata.dsd.hasOwnProperty(\"workspace\"))\n\t                layer.layers += metadata.dsd.workspace + \":\";\n\t\n\t            layer.layers += metadata.dsd.layerName;\n\t        }\n\t        else {\n\t            this.errors['dsd'] = \"Model['metadata'] does not contain 'dsd' attribute.\";\n\t            throw new Error(\"FENIX Map creator has not a valid configuration\");\n\t        }\n\t\n\t        //TODO\n\t        //if (model.hasOwnProperty(\"datasource\"))\n\t        //  layer.urlWMS = metadata[\"datasource\"];\n\t\n\t        layer.urlWMS = this.fenix_ui_map.DEFAULT_WMS_SERVER;\n\t        layer.layertitle = {\n\t            en: 'Data Layer'\n\t        };\n\t        layer.opacity = '0.9';\n\t        return layer;\n\t    };\n\t\n\t    MapCreator.prototype.createLayerFenixUid = function (uid) {\n\t        var layer = {\n\t            urlWMS: this.DEFAULT_WMS_SERVER,\n\t            layertitle: {\n\t                en: 'Data Layer'\n\t            },\n\t            opacity: '0.9',\n\t            layers: uid\n\t        };\n\t        return layer;\n\t    };\n\t\n\t    // JOIN\n\t    MapCreator.prototype.createLayerFenixJoin = function (model) {\n\t\n\t        if (this._validateJoinInput(model) === true) {\n\t\n\t            // create the join layer\n\t            var layer = this.getJoinLayer(model);\n\t\n\t            _.extend(layer, this.join.style);\n\t\n\t            var defPopup = \"<div class='fm-popup'>{{\" + layer.joincolumnlabel + \"}}\" +\n\t                \"<div class='fm-popup-join-content'>{{{\" + layer.joincolumn + \"}}} \" +\n\t                \"{{measurementunit}}\" +\n\t                \"</div></div>\";\n\t\n\t\n\t            // Layer title TODO: Add title if exist (check in the validator)\n\t            if (model['metadata'].hasOwnProperty(\"title\")) {\n\t                if (model['metadata']['title'][this.lang]) {\n\t                    layer.layertitle = model['metadata']['title'][this.lang];\n\t                    //console.log('title',this.lang, layer.layertitle)\n\t                }\n\t            }\n\t            else {\n\t                layer.layertitle = model['metadata']['uid'];\n\t            }\n\t\n\t            // getting a title from the options\n\t            if (this.hasOwnProperty('layer') && this.layer.hasOwnProperty('layertitle')) {\n\t                layer.layertitle = this.layer.layertitle;\n\t            }\n\t\n\t            if (this.hasOwnProperty('layer') && this.layer.hasOwnProperty('popupBuilder')) {\n\t                layer.popupBuilder = this.layer.popupBuilder;\n\t            }\n\t\n\t            layer.customgfi = {\n\t                showpopup: true,\n\t                content: {\n\t                    EN: _.isFunction(layer.popupBuilder) ? layer.popupBuilder(layer.joincolumnlabel, layer.joincolumn) : defPopup\n\t                }\n\t            };\n\t\n\t            // TODO: add check on the zoomto data (move it to a function)\n\t            var codes = [];\n\t            layer.joindata.forEach(function (code) {\n\t                _.keys(code).forEach(function (key) {\n\t                    if (_.isNumber(parseInt(key)))\n\t                        codes.push(key);\n\t                });\n\t            });\n\t\n\t            var zoomlayer = layer.layers.split(\":\");\n\t\n\t            zoomlayer = zoomlayer.length > 1 ? zoomlayer[1] : zoomlayer[0];\n\t\n\t            this.fenixMap.zoomTo(zoomlayer, layer.joincolumn, codes);\n\t\n\t            if (this.initial.colorRamp)\n\t                layer.colorramp = this.initial.colorRamp;\n\t\n\t            return layer;\n\t\n\t        } else {\n\t            //console.error(this.errors);\n\t            //throw new Error(\"FENIX Map creator has not a valid JOIN configuration\");\n\t        }\n\t    };\n\t\n\t    MapCreator.prototype.getJoinLayer = function (model) {\n\t\n\t        var metadata = model['metadata'],\n\t            geoColumn = {},\n\t            valueColumn = {},\n\t            muColumn = {};\n\t\n\t        metadata['dsd']['columns'].forEach(_.bind(function (col, index) {\n\t            if (col.subject === this.geoSubject || col.id === this.geoSubject) {\n\t                geoColumn = col;\n\t                geoColumn.index = index;\n\t            }\n\t            if (col.subject === this.valueSubject || col.id === this.valueSubject) {\n\t                valueColumn = col;\n\t                valueColumn.index = index;\n\t            }\n\t            if (col.subject === this.muSubject) {\n\t                muColumn = col;\n\t                muColumn.index = index;\n\t            }\n\t        }, this));\n\t\n\t        // getting the right measurement unit if the new label exists\n\t        metadata['dsd']['columns'].forEach(_.bind(function (column, index) {\n\t            if (muColumn.id + '_' + this.lang) {\n\t                muColumn = column;\n\t                muColumn.index = index;\n\t            }\n\t        }, this));\n\t\n\t\n\t        if (this._validateJoinColumnInput(geoColumn)) {\n\t\n\t\n\t            var layer = null;\n\t            var codelist = geoColumn['domain']['codes'][0]['idCodeList'].toLowerCase();\n\t\n\t            if (this.join.layerMapping[codelist]) {\n\t                layer = this.join.layerMapping[codelist];\n\t            }\n\t            else {\n\t                geoColumn['domain']['codes'][0].idCodeList.toLowerCase();\n\t                // TODO: Handle reference Area\n\t                var referenceArea = metadata[\"meContent\"][\"seReferencePopulation\"][\"referenceArea\"]['codes'][0].code.toLowerCase();\n\t                layer = this.join.layerMapping[codelist + \"_\" + referenceArea];\n\t            }\n\t\n\t            // check measurementunit\n\t            // TODO: Add measurement unit to the layer definition (using label column of the mu)\n\t\n\t            // get joinData\n\t            layer.joindata = this.getJoinData(model['data'], geoColumn.index, valueColumn.index);\n\t\n\t            // TODO: check on the column index\n\t            layer.measurementunit = model['data'][0][muColumn.index];\n\t\n\t            // TODO: check if is the right legendtitle\n\t            layer.legendtitle = layer.measurementunit;\n\t\n\t            layer.layertitle = 'OCD';\n\t            //layer.legendtitle = 'ODA';\n\t\n\t            return layer;\n\t\n\t        } else {\n\t            console.error('Error JoinColumnInput not valid')\n\t        }\n\t    };\n\t\n\t    MapCreator.prototype.getJoinData = function (data, geoColumnIndex, valueColumnIhdex) {\n\t        var joindata = [];\n\t\n\t        // TODO: remove cachedValues on final version. Check on join data consistency?\n\t        var cachedValues = {}\n\t        // TODO: add on check\n\t        data.forEach(_.bind(function (row) {\n\t            var obj = {}\n\t            var code = row[geoColumnIndex];\n\t            var value = row[valueColumnIhdex];\n\t            if (code && value) {\n\t                obj[code] = value;\n\t                if (!cachedValues.hasOwnProperty(code)) {\n\t                    // check null values\n\t                    cachedValues[code] = true;\n\t                    joindata.push(obj);\n\t                }\n\t            }\n\t        }, this));\n\t\n\t        return joindata;\n\t    };\n\t\n\t    MapCreator.prototype._validateJoinInput = function (model) {\n\t        this.errors = {};\n\t\n\t        //Metadata TODO: add all metadata checks\n\t        if (!model.hasOwnProperty(\"metadata\")) {\n\t            this.errors.metadata = \"'metadata' attribute not present.\";\n\t        }\n\t\n\t        //Data\n\t        if (!model.hasOwnProperty(\"data\")) {\n\t            this.errors.data = \"'data' attribute not present.\";\n\t        }\n\t\n\t        return (_.keys(this.errors).length === 0);\n\t    };\n\t\n\t    MapCreator.prototype._validateJoinColumnInput = function (column) {\n\t        this.errors = {};\n\t\n\t        //Metadata TODO: add all metadata checks\n\t        if (!column.hasOwnProperty('key')) {\n\t            this.errors.column = \"'key' attribute not present.\";\n\t        }\n\t        else {\n\t            if (column.key !== true) {\n\t                this.errors.column = \"'key' is not true.\";\n\t            }\n\t        }\n\t\n\t        if (!column.hasOwnProperty('dataType')) {\n\t            this.errors.column = \"'dataType' attribute not present.\";\n\t        }\n\t        else {\n\t            if (column.dataType !== 'code') {\n\t                this.errors.column = \"'dataType' attribute is not a coding system.\";\n\t            }\n\t        }\n\t\n\t        // TODO: check domain and referencearea if needed\n\t\n\t        return (Object.keys(this.errors).length === 0);\n\t    };\n\t\n\t    return MapCreator;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t        WMS_URL: \"http://fenix.fao.org/demo/fenix/geoserver\",\n\t        DEFAULT_WMS_SERVER: \"http://fenix.fao.org/demo/fenix/geoserver\",\n\t        url: {\n\t            wms: \"http://fenix.fao.org/demo/fenix/geoserver\"\n\t        },        \n\t        fenix_ui_map: {\n\t            plugins: {\n\t                disclaimerfao: true,\n\t                geosearch: true,\n\t                mouseposition: false,\n\t                controlloading : true,\n\t                zoomcontrol: 'bottomright'\n\t            },\n\t            guiController: {\n\t                overlay: false,\n\t                baselayer: true,\n\t                wmsLoader: false\n\t            },\n\t            gui: {\n\t                disclaimerfao: true\n\t            }\n\t        },\n\t        leaflet: {\n\t            zoomControl: false,\n\t            attributionControl: false,\n\t            minZoom: 1\n\t        },\n\t        layers: {\n\t            gaul0: {\n\t                layers: 'fenix:gaul0_3857',\n\t                urlWMS: 'http://fenix.fao.org/demo/fenix/geoserver',\n\t                opacity: '0.9',\n\t                joincolumn: 'adm0_code',\n\t                joincolumnlabel: 'areanamee',\n\t                layertype: 'JOIN',\n\t                jointype: 'shaded',\n\t                openlegend: true,\n\t                defaultgfi: true,\n\t                colorramp: 'YlGn',\n\t                lang: 'en'\n\t            }\n\t        },\n\t        geoSubject: 'geo',\n\t        colorRamp: 'Reds',  //Blues, Greens,\n\t        //colorRamp values: http://fenixrepo.fao.org/cdn/fenix/fenix-ui-map-datasets/colorramp.png        \n\t\n\t        valueSubject: 'value',\n\t        // measurement unit\n\t        muSubject: null,\n\t\n\t        // Mapping with the\n\t        join: {\n\t            style: {\n\t                layertype: 'JOIN',\n\t                jointype: 'shaded',\n\t                defaultgfi: true,\n\t                openlegend: true,\n\t                lang: 'EN',\n\t                opacity: '0.7',\n\t                colorramp: 'Greens',\n\t                decimalvalues: 2\n\t            },\n\t            layerMapping: {\n\t                escap_area: {\n\t                    layers: 'fenix:gaul0_3857',\n\t                    joincolumn: 'adm0_code',\n\t                    joincolumnlabel: 'adm0_name'\n\t                },\n\t                gaul0: {\n\t                    layers: 'fenix:gaul0_3857',\n\t                    joincolumn: 'adm0_code',\n\t                    joincolumnlabel: 'adm0_name'\n\t                },\n\t                gaul1: {\n\t                    layers: 'fenix:gaul1_3857',\n\t                    joincolumn: 'adm1_code',\n\t                    joincolumnlabel: 'adm1_name'\n\t                },\n\t                uae_gaul: {\n\t                    layers: 'fenix:gaul1_3857',\n\t                    joincolumn: 'adm1_code',\n\t                    joincolumnlabel: 'adm1_name'\n\t                },\n\t\n\t                gaul_adm1: {\n\t                    layers: 'fenix:gaul1_3857',\n\t                    joincolumn: 'adm1_code',\n\t                    joincolumnlabel: 'adm1_name'\n\t                },\n\t\n\t                faostat_countrycodes: {\n\t                    layers: 'fenix:gaul0_faostat_3857',\n\t                    joincolumn: 'faost_code',\n\t                    joincolumnlabel: 'areanamee',\n\t                },\n\t                faostat_countries: {\n\t                    layers: 'fenix:gaul0_faostat_3857',\n\t                    joincolumn: 'faost_code',\n\t                    joincolumnlabel: 'areanamee',\n\t                },\n\t                gaul: {\n\t                    layers: 'fenix:gaul1_3857',\n\t                    joincolumn: 'adm1_code',\n\t                    joincolumnlabel: 'adm1_name'\n\t                },\n\t                uneca_partner: {\n\t                    layers: 'fenix:gaul0_faostat3_3857',\n\t                    joincolumn: 'iso3',\n\t                    joincolumnlabel: 'areanamee'\n\t                },\n\t                gaul1_afg: {\n\t                    layers: 'fenix:gaul1_3857',\n\t                    joincolumn: 'adm1_code',\n\t                    joincolumnlabel: 'adm1_name'\n\t                },\n\t                iso3: {\n\t                    layers: 'fenix:gaul0_faostat3_3857',\n\t                    joincolumn: 'iso3',\n\t                    joincolumnlabel: 'areanamee'\n\t                },\n\t                uneca_iso3: {\n\t                    layers: 'fenix:gaul0_faostat3_3857',\n\t                    joincolumn: 'iso3',\n\t                    joincolumnlabel: 'areanamee'\n\t                }\n\t            }\n\t        }\n\t        // TODO: add boundaries option\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        MISSING_CONTAINER: 'missing_container'\n\t\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        WINDOW_RESIZE: 'fs.window.resize.event'\n\t\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n/***/ }\n/******/ ])});;\n\n\n// WEBPACK FOOTER //\n// fenix-ui-map-creator.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 625ee555ebfccd480952","define([\n    'jquery',\n    'underscore',\n    'loglevel',\n    '../config/errors',\n    '../config/events',\n    '../config/config',\n    'fenix-ui-map',\n    'fenix-ui-pivotator',\n    'fenix-ui-pivotator-utils',\n    'amplify-pubsub'\n], function ($, _, log, ERR, EVT, C, FM, Pivotator, Fenixtool, amplify) {\n\n    'use strict';\n\n    function MapCreator(o) {\n\n        log.info(\"FENIX MapCreator\");\n        log.info(o);\n\n        _.extend(this, C, {initial: o});\n\n        this._parseInput(o);\n\n        this.fenix_ui_mapConfig = o.fenix_ui_map;\n\n        var valid = this._validateInput();\n\n        if (valid === true) {\n\n            this._initVariables();\n\n            this._bindEventListeners();\n\n            this._renderMap();\n\n            return this;\n\n        } else {\n            log.error(\"Impossible to create MapCreator\");\n            log.error(valid)\n        }\n\n    }\n\n    // API\n\n    /**\n     * pub/sub\n     * @return {Object} component instance\n     */\n    MapCreator.prototype.on = function (channel, fn, context) {\n        var _context = context || this;\n        if (!this.channels[channel]) {\n            this.channels[channel] = [];\n        }\n        this.channels[channel].push({context: _context, callback: fn});\n        return this;\n    };\n\n    /**\n     * Add a base layer to map\n     */\n    MapCreator.prototype.addBaseLayer = function (layer) {\n\n        this.fenixMap.addTileLayer(layer, true);\n\n        return this;\n    };\n    /**\n     * Add a layer to map\n     */\n    MapCreator.prototype.addLayer = function (model) {\n\n        var layer;\n\n        if (!model)\n            return false;\n\n        //support simple Leaflet layer\n        if (model instanceof L.TileLayer)\n            return this.fenixMap.map.addLayer(model);\n\n        // TODO: switch to check if it's a fenix layer\n        if (this.errors && (!model || !model.hasOwnProperty(\"metadata\") ))\n            this.errors.metadata = \"Model does not contain 'metadata' attribute.\";\n\n        if (typeof model === 'string')\n            layer = this.createLayerFenixUid(model);\n\n        else if (model.hasOwnProperty('data'))\n            layer = this.createLayerFenixJoin(model);\n\n        else\n            layer = this.createLayerFenix(model);\n\n        layer = new FM.layer(layer);\n\n        if (typeof model === 'object' && model['metadata'] && model['metadata']['title'] && model['metadata']['title']['EN'])\n            layer.layer.layertitle = model['metadata']['title']['EN'];\n\n        if (this.initial.legendtitle)\n            layer.layer.layertitle = this.initial.legendtitle;\n\n        this.fenixMap.addLayer(layer);\n\n        return layer;\n    };\n\n    /**\n     * Remove a layer from map\n     */\n    MapCreator.prototype.removeLayer = function (layer) {\n\n        if (this.status.ready !== true) {\n            return;\n        }\n\n        return this;\n    };\n\n    /**\n     * Invalidate map size\n     */\n    MapCreator.prototype.invalidateSize = function () {\n\n        if (this.status.ready !== true) {\n            return;\n        }\n\n        this.fenixMap.invalidateSize()\n\n        return this;\n    };\n\n    // end API\n\n    MapCreator.prototype._parseInput = function () {\n\n        this.id = this.initial.id;\n        this.$el = $(this.initial.el);\n        this.model = this.initial.model;\n\n        //pivotator config\n        var pc = {};\n\n        pc.aggregationFn = this.initial.aggregationFn;\n\n        pc.aggregations = this.initial.aggregations || [];\n        pc.hidden = this.initial.hidden || [];\n        pc.columns = this.initial.x;\n        pc.values = this.initial.y || [\"value\"];\n        pc.rows = this.initial.series;\n\n        pc.formatter = this.initial.formatter || \"value\";\n        pc.valueOutputType = this.initial.valueOutputType;\n        pc.showRowHeaders = this.initial.showRowHeaders || false;\n        pc.decimals = this.initial.decimals || 2;\n\n        pc.showCode = this.initial.showCode || false;\n        pc.showFlag = this.initial.showFlag || false;\n        pc.showUnit = this.initial.showUnit || false;\n\n        // add more pivotator config\n\n        this.pivotatorConfig = pc;\n\n    };\n\n    MapCreator.prototype._validateInput = function () {\n\n        var valid = true,\n            errors = [];\n\n        //set MapCreator id\n        if (!this.id) {\n\n            window.fx_map_id >= 0 ? window.fx_map_id++ : window.fx_map_id = 0;\n            this.id = String(window.fx_map_id);\n            log.warn(\"Impossible to find MapCreator id. Set auto id to: \" + this.id);\n        }\n\n        //Check if $el exist\n        if (this.$el.length === 0) {\n            errors.push({code: ERR.MISSING_CONTAINER});\n            log.warn(\"Impossible to find box container\");\n        }\n\n        return errors.length > 0 ? errors : valid;\n\n    };\n\n    MapCreator.prototype._initVariables = function () {\n\n        //pub/sub\n        this.channels = {};\n\n        this.status = {};\n        this.status.ready = false;\n\n        this.pivotator = new Pivotator();\n        this.fenixTool = new Fenixtool();\n    };\n\n    MapCreator.prototype._bindEventListeners = function () {\n\n        amplify.subscribe(this._getEventName(EVT.WINDOW_RESIZE), this, this.invalidateSize);\n    };\n\n    MapCreator.prototype._renderMap = function () {\n\n        var self = this;\n\n        //var myPivotatorConfig=this.fenixTool.parseInut(this.initial.model.metadata.dsd, this.pivotatorConfig);\n        //var model = this.pivotator.pivot(this.model, this.pivotatorConfig);\n\n        self.fenixMap = new FM.Map(self.$el, self.fenix_ui_mapConfig);\n        self.fenixMap.createMap();\n\n        self.leafletMap = self.fenixMap.map;\n\n        if (self.model) {\n            self.addLayer(self.model);\n        }\n        else if (this.initial.uid) {\n            self.addLayer(this.initial.uid);\n        }\n\n\n        //TODO bind to Leaflet whenReady\n        self.status.ready = true;  //To be set on map ready event\n\n        setTimeout(_.bind(function () {\n            self._trigger('ready');\n        }, self), 0);\n    };\n\n    MapCreator.prototype._trigger = function (channel) {\n\n        if (!this.channels[channel]) {\n            return false;\n        }\n        var args = Array.prototype.slice.call(arguments, 1);\n        for (var i = 0, l = this.channels[channel].length; i < l; i++) {\n            var subscription = this.channels[channel][i];\n            subscription.callback.apply(subscription.context, args);\n        }\n\n        return this;\n    };\n\n    MapCreator.prototype._getEventName = function (evt) {\n\n        return this.id.concat(evt);\n\n    };\n\n    MapCreator.prototype._unbindEventListeners = function () {\n\n        amplify.unsubscribe(this._getEventName(EVT.WINDOW_RESIZE), this.invalidateSize);\n    };\n\n    MapCreator.prototype.dispose = function () {\n\n        //unbind event listeners\n        this._unbindEventListeners();\n\n        if (this.status.ready === true) {\n            this.fenixMap.destroyMap();\n        }\n\n        this.$el.empty();\n\n    };\n\n    MapCreator.prototype.createLayerFenix = function (model, options) {\n        var metadata = model.metadata;\n        var layer = {};\n        // Define the layer\n        if (metadata.hasOwnProperty(\"dsd\")) {\n            layer.layers = \"\";\n            if (metadata.dsd.hasOwnProperty(\"workspace\"))\n                layer.layers += metadata.dsd.workspace + \":\";\n\n            layer.layers += metadata.dsd.layerName;\n        }\n        else {\n            this.errors['dsd'] = \"Model['metadata'] does not contain 'dsd' attribute.\";\n            throw new Error(\"FENIX Map creator has not a valid configuration\");\n        }\n\n        //TODO\n        //if (model.hasOwnProperty(\"datasource\"))\n        //  layer.urlWMS = metadata[\"datasource\"];\n\n        layer.urlWMS = this.fenix_ui_map.DEFAULT_WMS_SERVER;\n        layer.layertitle = {\n            en: 'Data Layer'\n        };\n        layer.opacity = '0.9';\n        return layer;\n    };\n\n    MapCreator.prototype.createLayerFenixUid = function (uid) {\n        var layer = {\n            urlWMS: this.DEFAULT_WMS_SERVER,\n            layertitle: {\n                en: 'Data Layer'\n            },\n            opacity: '0.9',\n            layers: uid\n        };\n        return layer;\n    };\n\n    // JOIN\n    MapCreator.prototype.createLayerFenixJoin = function (model) {\n\n        if (this._validateJoinInput(model) === true) {\n\n            // create the join layer\n            var layer = this.getJoinLayer(model);\n\n            _.extend(layer, this.join.style);\n\n            var defPopup = \"<div class='fm-popup'>{{\" + layer.joincolumnlabel + \"}}\" +\n                \"<div class='fm-popup-join-content'>{{{\" + layer.joincolumn + \"}}} \" +\n                \"{{measurementunit}}\" +\n                \"</div></div>\";\n\n\n            // Layer title TODO: Add title if exist (check in the validator)\n            if (model['metadata'].hasOwnProperty(\"title\")) {\n                if (model['metadata']['title'][this.lang]) {\n                    layer.layertitle = model['metadata']['title'][this.lang];\n                    //console.log('title',this.lang, layer.layertitle)\n                }\n            }\n            else {\n                layer.layertitle = model['metadata']['uid'];\n            }\n\n            // getting a title from the options\n            if (this.hasOwnProperty('layer') && this.layer.hasOwnProperty('layertitle')) {\n                layer.layertitle = this.layer.layertitle;\n            }\n\n            if (this.hasOwnProperty('layer') && this.layer.hasOwnProperty('popupBuilder')) {\n                layer.popupBuilder = this.layer.popupBuilder;\n            }\n\n            layer.customgfi = {\n                showpopup: true,\n                content: {\n                    EN: _.isFunction(layer.popupBuilder) ? layer.popupBuilder(layer.joincolumnlabel, layer.joincolumn) : defPopup\n                }\n            };\n\n            // TODO: add check on the zoomto data (move it to a function)\n            var codes = [];\n            layer.joindata.forEach(function (code) {\n                _.keys(code).forEach(function (key) {\n                    if (_.isNumber(parseInt(key)))\n                        codes.push(key);\n                });\n            });\n\n            var zoomlayer = layer.layers.split(\":\");\n\n            zoomlayer = zoomlayer.length > 1 ? zoomlayer[1] : zoomlayer[0];\n\n            this.fenixMap.zoomTo(zoomlayer, layer.joincolumn, codes);\n\n            if (this.initial.colorRamp)\n                layer.colorramp = this.initial.colorRamp;\n\n            return layer;\n\n        } else {\n            //console.error(this.errors);\n            //throw new Error(\"FENIX Map creator has not a valid JOIN configuration\");\n        }\n    };\n\n    MapCreator.prototype.getJoinLayer = function (model) {\n\n        var metadata = model['metadata'],\n            geoColumn = {},\n            valueColumn = {},\n            muColumn = {};\n\n        metadata['dsd']['columns'].forEach(_.bind(function (col, index) {\n            if (col.subject === this.geoSubject || col.id === this.geoSubject) {\n                geoColumn = col;\n                geoColumn.index = index;\n            }\n            if (col.subject === this.valueSubject || col.id === this.valueSubject) {\n                valueColumn = col;\n                valueColumn.index = index;\n            }\n            if (col.subject === this.muSubject) {\n                muColumn = col;\n                muColumn.index = index;\n            }\n        }, this));\n\n        // getting the right measurement unit if the new label exists\n        metadata['dsd']['columns'].forEach(_.bind(function (column, index) {\n            if (muColumn.id + '_' + this.lang) {\n                muColumn = column;\n                muColumn.index = index;\n            }\n        }, this));\n\n\n        if (this._validateJoinColumnInput(geoColumn)) {\n\n\n            var layer = null;\n            var codelist = geoColumn['domain']['codes'][0]['idCodeList'].toLowerCase();\n\n            if (this.join.layerMapping[codelist]) {\n                layer = this.join.layerMapping[codelist];\n            }\n            else {\n                geoColumn['domain']['codes'][0].idCodeList.toLowerCase();\n                // TODO: Handle reference Area\n                var referenceArea = metadata[\"meContent\"][\"seReferencePopulation\"][\"referenceArea\"]['codes'][0].code.toLowerCase();\n                layer = this.join.layerMapping[codelist + \"_\" + referenceArea];\n            }\n\n            // check measurementunit\n            // TODO: Add measurement unit to the layer definition (using label column of the mu)\n\n            // get joinData\n            layer.joindata = this.getJoinData(model['data'], geoColumn.index, valueColumn.index);\n\n            // TODO: check on the column index\n            layer.measurementunit = model['data'][0][muColumn.index];\n\n            // TODO: check if is the right legendtitle\n            layer.legendtitle = layer.measurementunit;\n\n            layer.layertitle = 'OCD';\n            //layer.legendtitle = 'ODA';\n\n            return layer;\n\n        } else {\n            console.error('Error JoinColumnInput not valid')\n        }\n    };\n\n    MapCreator.prototype.getJoinData = function (data, geoColumnIndex, valueColumnIhdex) {\n        var joindata = [];\n\n        // TODO: remove cachedValues on final version. Check on join data consistency?\n        var cachedValues = {}\n        // TODO: add on check\n        data.forEach(_.bind(function (row) {\n            var obj = {}\n            var code = row[geoColumnIndex];\n            var value = row[valueColumnIhdex];\n            if (code && value) {\n                obj[code] = value;\n                if (!cachedValues.hasOwnProperty(code)) {\n                    // check null values\n                    cachedValues[code] = true;\n                    joindata.push(obj);\n                }\n            }\n        }, this));\n\n        return joindata;\n    };\n\n    MapCreator.prototype._validateJoinInput = function (model) {\n        this.errors = {};\n\n        //Metadata TODO: add all metadata checks\n        if (!model.hasOwnProperty(\"metadata\")) {\n            this.errors.metadata = \"'metadata' attribute not present.\";\n        }\n\n        //Data\n        if (!model.hasOwnProperty(\"data\")) {\n            this.errors.data = \"'data' attribute not present.\";\n        }\n\n        return (_.keys(this.errors).length === 0);\n    };\n\n    MapCreator.prototype._validateJoinColumnInput = function (column) {\n        this.errors = {};\n\n        //Metadata TODO: add all metadata checks\n        if (!column.hasOwnProperty('key')) {\n            this.errors.column = \"'key' attribute not present.\";\n        }\n        else {\n            if (column.key !== true) {\n                this.errors.column = \"'key' is not true.\";\n            }\n        }\n\n        if (!column.hasOwnProperty('dataType')) {\n            this.errors.column = \"'dataType' attribute not present.\";\n        }\n        else {\n            if (column.dataType !== 'code') {\n                this.errors.column = \"'dataType' attribute is not a coding system.\";\n            }\n        }\n\n        // TODO: check domain and referencearea if needed\n\n        return (Object.keys(this.errors).length === 0);\n    };\n\n    return MapCreator;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/index.js\n// module id = 1\n// module chunks = 0","define(function () {\n\n    'use strict';\n\n    return {\n        WMS_URL: \"http://fenix.fao.org/demo/fenix/geoserver\",\n        DEFAULT_WMS_SERVER: \"http://fenix.fao.org/demo/fenix/geoserver\",\n        url: {\n            wms: \"http://fenix.fao.org/demo/fenix/geoserver\"\n        },        \n        fenix_ui_map: {\n            plugins: {\n                disclaimerfao: true,\n                geosearch: true,\n                mouseposition: false,\n                controlloading : true,\n                zoomcontrol: 'bottomright'\n            },\n            guiController: {\n                overlay: false,\n                baselayer: true,\n                wmsLoader: false\n            },\n            gui: {\n                disclaimerfao: true\n            }\n        },\n        leaflet: {\n            zoomControl: false,\n            attributionControl: false,\n            minZoom: 1\n        },\n        layers: {\n            gaul0: {\n                layers: 'fenix:gaul0_3857',\n                urlWMS: 'http://fenix.fao.org/demo/fenix/geoserver',\n                opacity: '0.9',\n                joincolumn: 'adm0_code',\n                joincolumnlabel: 'areanamee',\n                layertype: 'JOIN',\n                jointype: 'shaded',\n                openlegend: true,\n                defaultgfi: true,\n                colorramp: 'YlGn',\n                lang: 'en'\n            }\n        },\n        geoSubject: 'geo',\n        colorRamp: 'Reds',  //Blues, Greens,\n        //colorRamp values: http://fenixrepo.fao.org/cdn/fenix/fenix-ui-map-datasets/colorramp.png        \n\n        valueSubject: 'value',\n        // measurement unit\n        muSubject: null,\n\n        // Mapping with the\n        join: {\n            style: {\n                layertype: 'JOIN',\n                jointype: 'shaded',\n                defaultgfi: true,\n                openlegend: true,\n                lang: 'EN',\n                opacity: '0.7',\n                colorramp: 'Greens',\n                decimalvalues: 2\n            },\n            layerMapping: {\n                escap_area: {\n                    layers: 'fenix:gaul0_3857',\n                    joincolumn: 'adm0_code',\n                    joincolumnlabel: 'adm0_name'\n                },\n                gaul0: {\n                    layers: 'fenix:gaul0_3857',\n                    joincolumn: 'adm0_code',\n                    joincolumnlabel: 'adm0_name'\n                },\n                gaul1: {\n                    layers: 'fenix:gaul1_3857',\n                    joincolumn: 'adm1_code',\n                    joincolumnlabel: 'adm1_name'\n                },\n                uae_gaul: {\n                    layers: 'fenix:gaul1_3857',\n                    joincolumn: 'adm1_code',\n                    joincolumnlabel: 'adm1_name'\n                },\n\n                gaul_adm1: {\n                    layers: 'fenix:gaul1_3857',\n                    joincolumn: 'adm1_code',\n                    joincolumnlabel: 'adm1_name'\n                },\n\n                faostat_countrycodes: {\n                    layers: 'fenix:gaul0_faostat_3857',\n                    joincolumn: 'faost_code',\n                    joincolumnlabel: 'areanamee',\n                },\n                faostat_countries: {\n                    layers: 'fenix:gaul0_faostat_3857',\n                    joincolumn: 'faost_code',\n                    joincolumnlabel: 'areanamee',\n                },\n                gaul: {\n                    layers: 'fenix:gaul1_3857',\n                    joincolumn: 'adm1_code',\n                    joincolumnlabel: 'adm1_name'\n                },\n                uneca_partner: {\n                    layers: 'fenix:gaul0_faostat3_3857',\n                    joincolumn: 'iso3',\n                    joincolumnlabel: 'areanamee'\n                },\n                gaul1_afg: {\n                    layers: 'fenix:gaul1_3857',\n                    joincolumn: 'adm1_code',\n                    joincolumnlabel: 'adm1_name'\n                },\n                iso3: {\n                    layers: 'fenix:gaul0_faostat3_3857',\n                    joincolumn: 'iso3',\n                    joincolumnlabel: 'areanamee'\n                },\n                uneca_iso3: {\n                    layers: 'fenix:gaul0_faostat3_3857',\n                    joincolumn: 'iso3',\n                    joincolumnlabel: 'areanamee'\n                }\n            }\n        }\n        // TODO: add boundaries option\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config/config.js\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"loglevel\"\n// module id = 4\n// module chunks = 0","define(function () {\n\n    'use strict';\n\n    return {\n\n        MISSING_CONTAINER: 'missing_container'\n\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config/errors.js\n// module id = 5\n// module chunks = 0","define(function () {\n\n    'use strict';\n\n    return {\n\n        WINDOW_RESIZE: 'fs.window.resize.event'\n\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config/events.js\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"underscore\"\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fenix-ui-map\"\n// module id = 8\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fenix-ui-pivotator\"\n// module id = 9\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fenix-ui-pivotator-utils\"\n// module id = 10\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"amplify-pubsub\"\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}